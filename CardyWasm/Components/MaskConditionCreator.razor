<MudStack>
    <MudPaper Outlined="true" Class="p-4">
        <MudContainer>
            <MudText Typo="Typo.h6">@Title #@(Index + 1)</MudText>
            

            <MudStack Spacing="2" Row="true" AlignItems="AlignItems.Center">
                <!-- Column Name -->
                if
                <MudItem>
                    <MudSelect 
                        Label="Column Name"
                        @bind-Value="Condition.ColumnName"
                        For="@(() => Condition.ColumnName)"
                        Immediate="true"
                        Variant="Variant.Outlined">
                        @foreach (var value in ColumnNames)
                        {
                            <MudSelectItem Value="value">@value</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                =
                <!-- Column Value -->
                <MudItem>
                    <MudTextField Label="Column Value" @bind-Value="Condition.Value" Variant="Variant.Outlined" />
                </MudItem>
                then use the following @Title.ToLower()
            </MudStack>
            <MudDivider Class="my-4" />
            @if (Title != "Frame")
            {
                <MudItem>
                    <MudTextField Label="@(Title + " Width in pixels")" @bind-Value="Condition.Height" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem>
                    <MudTextField Label="@(Title + " Width in pixels")" @bind-Value="Condition.Width" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem>
                    <MudTextField Label="X Position in pixels" @bind-Value="Condition.XCord" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem>
                    <MudTextField Label="Y Position in pixels" @bind-Value="Condition.YCord" Variant="Variant.Outlined" />
                </MudItem>
            }
            <!-- Image Input Options -->
            <MudStack Spacing="2">
                <MudText Typo="Typo.body1">Attach @Title Image</MudText>
                <!-- Image URL -->
                <MudItem>
                    <MudTextField Label="Image URL" @bind-Value="Condition.ImgUrl" Variant="Variant.Outlined" />
                </MudItem>
            </MudStack>
            <!-- Remove -->
            <MudButton
                Label="Column Value"
                OnClick="() => OnRemove.InvokeAsync()"
                Variant="Variant.Filled"
                Color="Color.Error"
                Disabled="@(Length == 1)"
            >Delete</MudButton>
        </MudContainer>
    </MudPaper>
</MudStack>


@code {
    [Parameter] public required MaskCondition Condition { get; set; }
    [Parameter] public required IList<string> ColumnNames { get; set; }
    [Parameter] public required string Title { get; set; }
    [Parameter] public required EventCallback<MaskCondition> OnRemove { get; set; }
    [Parameter] public required int Index { get; set; }
    [Parameter] public required int Length { get; set; }
}